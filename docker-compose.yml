version: '3.4'

services:
  jaeger-host:
    container_name: jaeger
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 9411:9411

  prometheus-host:
    container_name: proemetheus
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./data/prometheus:/etc/prometheus
      - ./data/prometheus/data:/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    ports:
     - 3000:3000
    container_name: grafana
    restart: unless-stopped
    links:
      - prometheus-host:prometheus
    volumes:
      - ./data/grafana:/var/lib/grafana
    depends_on:
      - prometheus-host

  first-api:
    build: 
      context: ./FirstApi
      dockerfile: Dockerfile
    ports:
      - "0.0.0.0:7000:5001"
    environment:
      - "ASPNETCORE_ENVIRONMENT=Development"
      - "ASPNETCORE_URLS=http://*:5001"
      - "Settings__ApiUrl=http://second-api:5002"
      - "Settings__JaegerHost=jaeger-host"
  
  second-api:
    build: 
      context: ./SecondApi
      dockerfile: Dockerfile
    ports:
      - "0.0.0.0:7001:5002"
    environment:
      - "ASPNETCORE_ENVIRONMENT=Development"
      - "ASPNETCORE_URLS=http://*:5002"
      - "Settings__JaegerHost=jaeger-host"
  
  web-app:
    build:
      context: ./WebApp
      dockerfile: Dockerfile
    ports:
      - "0.0.0.0:7100:5100"
    environment:
      - "ASPNETCORE_ENVIRONMENT=Development"
      - "ASPNETCORE_URLS=http://*:5100"
      - "Settings__ApiUrl=http://first-api:5001"
      - "Settings__JaegerHost=jaeger-host"
      - "Settings__PrometheusHost=prometheus-host"

      